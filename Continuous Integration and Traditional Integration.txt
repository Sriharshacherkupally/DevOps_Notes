----> Traditional Integration?
                     The traditional approach is to manually install these tools on bare metal boxes or virtual machines and configuring them to talk to each other.Steps for traditional DevOps infrastructure. Git/Gerrit, Jenkins, JIRA is installed on single or multiple machines.
         
--> Problems with traditional integration:
   * Difficult to implement all the details that have changed
   * Difficult to get the lastest version of the code
   * Difficult to manage all the changes with the changinng with the changing API versions
   * Difficult to manage the entrie subsystem of the application that behave differently
   * Difficult to re write the whole code
---->How to solve problems:
   * Split the entire chunk of codes into segments
   * Keep small segments of manageable code
   * Integrate the segmented code,multiples times a day
   * Adopt a continous integration methodlogy to cooridinate with your team

    * Greater time gap incase of traditinal integration
    * Relatively greater risk or changes in conflicts.

--->What is continuous integration?
      It is the process of automating the building and testing code,each time one of the team member commits changes to version control.
    

    * Integration time gap is relatively much lesser.
    * Relatively lesser risk or changes in conflicts


----->Importance of Continuous integration
       * Improve Quality
       * Increases Productivity
       * Reduces Risk
-->Popular Continous Integration Tools:
        * Gitlab CI
        * CodeShip
        * Bamboo
        * Jenkins
        * Teamcity
        * Travis CI
